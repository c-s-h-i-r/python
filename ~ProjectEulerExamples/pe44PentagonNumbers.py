'''Project Euler 44
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
'''


import sys
class pe44:
    _pentagonal = []
    def getPentagonalNumbers(self):
        l = []
        for i in range(1,100):
            num = (i * (3*i-1) )/ 2
            self._pentagonal.append(num)
        
    
    def sumAndDiffPentagonal(self,j,k):
        '''assume j and k are pentagonal'''
        if (j + k) in self._pentagonal and abs(j-k) in self._pentagonal:
            return True
        return False
    
    
    def main(self):
        self.getPentagonalNumbers()
        min = sys.maxint/4
        print self._pentagonal
        for i in self._pentagonal:
            for j in self._pentagonal:
                if(self.sumAndDiffPentagonal(i,j)):
                    diff = abs(i-j)
                    if diff < min:
                        min = diff
        print min
                
if __name__ == "__main__":
    c = pe44()
    c.main()